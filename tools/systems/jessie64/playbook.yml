---

- hosts: common
  remote_user: vagrant
  become: yes
  become_user: root
  vars:
    ansible_python_interpreter: /usr/bin/python2
    python_packages:
      - netifaces
      - rethinkdb

  tasks:
     - name: Install Go 1.5.3
       unarchive: src=https://storage.googleapis.com/golang/go1.5.3.linux-amd64.tar.gz
                   dest=/usr/local
                   copy=no
      
     - name: Set Go Path
       lineinfile: dest=/home/vagrant/.profile
                    create=yes state=present
                    line="export PATH=$PATH:/usr/local/go/bin"

     - name: Add Backport Repo
       lineinfile: dest=/etc/apt/sources.list insertafter=EOF state=present line="deb http://ftp.debian.org/debian jessie-backports main"

     - name: Install Packages
       apt: name={{ item }} state=present update_cache=yes
       with_items:
          - docker.io
          - python-pip
          - python2.7-dev
          - curl
          - ca-certificates

     - name: Enable aufs
       modprobe: name=aufs state=present

     - name: Install Python Packages
       pip:  name="{{ python_packages | join(' ') }}"

     - name: Add vagrant User To Docker Group
       user: name=vagrant append=yes groups=docker

     - name: Start docker Service
       service: name=docker state=started enabled=yes

     - name: Create opt Directory
       file: path=/opt state=directory
             owner=vagrant mode=0777

     - name: Create .ssh Directory
       file: path=/root/.ssh state=directory
             owner=root mode=0640

     - name: Clone open-lambda Repo
       git:  repo=http://github.com/open-lambda/open-lambda.git
             dest=/opt/open-lambda
       ignore_errors: yes

     - name: chmod Source Directory
       file: path=/opt/open-lambda/ state=directory
             owner=vagrant recurse=yes

     #- name: Build Lambda-node
     #  make: chdir=/opt/open-lambda/ target=imgs/lambda-node
     #  environment:
     #        PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin"
     #
     #- name: Start Cluster
     #  shell: python /opt/open-lambda/util/start-local-cluster.py
     #
     #- name: Start PyChat App
     #  shell: python /opt/open-lambda/applications/pychat/setup.py
     #
     #- name: Point PyChat To localhost
     #  replace: dest=/opt/open-lambda/applications/pychat/static/config.json regexp=10.0.2.15 replace=localhost
     #
     #- name: Start nginx Container
     #  shell: docker run -d -p 80:80 -v /opt/open-lambda/applications/pychat/static:/usr/share/nginx/html:ro nginx
